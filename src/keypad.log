FlashForth V3.8

-keypad  ok<$,ram>
marker -keypad  ok<$,ram>
\ Display key presses from a 4x3 (telephone-like) keypad   ok<$,ram>
  ok<$,ram>
$ff81 con portb  ok<$,ram>
$ff8a con latb  ok<$,ram>
$ff93 con trisb  ok<$,ram>
$ffc1 con adcon1  ok<$,ram>
$fff1 con intcon2  ok<$,ram>
  ok<$,ram>
: init ( -- ) 
  0 latb c! 
  %00001111 adcon1 c! \ set as all digital I/O pins 
  %11110000 trisb c! \ RB7-4 as input, RB3-0 as output 
  %10000000 intcon2 mclr \ turn on pull-ups 
;  ok<$,ram>
  ok<$,ram>
flash   ok<$,flash>
create key_chars   ok<$,flash>
  char 1 c, char 2 c, char 3 c,  ok<$,flash>
  char 4 c, char 5 c, char 6 c,  ok<$,flash>
  char 7 c, char 8 c, char 9 c,  ok<$,flash>
  char * c, char 0 c, char # c,  ok<$,flash>
create key_scan_bytes  ok<$,flash>
  $7e c, $7d c, $7b c,  ok<$,flash>
  $be c, $bd c, $bb c,  ok<$,flash>
  $de c, $dd c, $db c,  ok<$,flash>
  $ee c, $ed c, $eb c,  ok<$,flash>
ram  ok<$,ram>
  ok<$,ram>
: scan_keys ( -- c ) 
  \ Return ASCII code of key that is pressed 
  #12 for 
    key_scan_bytes r@ + c@  
    dup 
    latb c! 
    portb c@ 
    = if  
      \ key must be pressed to get a match 
      key_chars r@ + c@ 
      rdrop 
      exit 
    then 
  next 
  0  \ no key was pressed 
;  ok<$,ram>
  ok<$,ram>
: keypad@ ( -- c )  
  \ Read keypad with simple debounce. 
  \ ASCII code is left on stack.  
  \ Zero is returned for no key pressed or inconsistent scans. 
  scan_keys dup  
  20 ms  
  scan_keys 
  = if exit else drop then 
  0 \ inconsistent scan results 
;  ok<$,ram>
           ok<$,ram>
: main ( -- ) 
  init 
  begin 
    keypad@ 
    dup  
    0= if  
      drop  \ no key pressed  
    else 
      emit   
      300 ms \ don't repeat key too quickly 
    then  
  again 
;  ok<$,ram>
main 8888822222224456**####888